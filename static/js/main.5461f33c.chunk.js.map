{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["makeSelectCells","name","allSelections","setSelections","selectedForUser","map","selected","blockNumber","options","allOptions","get","filter","v","blockName","selectedForThisBlock","filterSelectedOnlyShowsSelected","forName","values","includes","filterChosenByUser","arrCopy","arr","index","slices","start","end","length","push","slice","getThreeElementPossibilities","xs","every","shift","startsWith","filterMax2NonEDInRow","filterNoMICUBlock1","filterNoToxBlock7","filterNoPICUBlock9","selectedThisBlock","getSelectedFromBlock","oneMICUPerBlock","shiftName","item","twoOffRotationPerBlock","numVacationsThisBlock","isVacation","filterMax3VacationsInBlock","filterBlockOptions","allShiftOptions","class","value","onChange","e","event","set","target","Map","onSelected","optionName","className","style","backgroundColor","blockToShift","entries","thisBlockNumber","makeHeaders","numberOfBlocks","nameHeader","blockHeaders","option","doctors","App","useState","names","nameMap","forEach","initEmptySchedules","initSelections","selections","console","log","rows","currentSelections","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5461f33c.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [selections, setSelections] = useState(initSelections(doctors));\n\n  console.log(selections);\n\n  const rows = [...selections].map(([name, currentSelections]) => (\n    <tr>\n      <td>{name}</td>\n      {makeSelectCells(name, selections, setSelections, currentSelections)}\n    </tr>\n  ));\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Schedule Drafting</h1>\n        <div class=\"table-wrapper\">\n          <table>\n            {makeHeaders(allShiftOptions.length)}\n            <tbody>{rows}</tbody>\n          </table>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nfunction makeSelectCells(name, allSelections, setSelections, selectedForUser) {\n  return [...selectedForUser].map((selected, blockNumber) => {\n    const options = filterBlockOptions(\n      allShiftOptions,\n      blockNumber,\n      name,\n      allSelections\n    );\n\n    return (\n      <td>\n        <select\n          class={allSelections.get(name).get(blockNumber)}\n          value={allSelections.get(name).get(blockNumber)}\n          onChange={(e) =>\n            onSelected(name, blockNumber, allSelections, setSelections, e)\n          }\n        >\n          <option value=\"\">--</option>\n          {options.map((optionName) => (\n            <option\n              class=\"ED\"\n              className=\"ED\"\n              style={{ backgroundColor: \"lightblue\" }}\n            >\n              {optionName}\n            </option>\n          ))}\n        </select>\n      </td>\n    );\n  });\n}\n\n//////////////////////////////////////////////////////////////////////////////\n// Filters\n\nfunction filterBlockOptions(allOptions, blockNumber, name, allSelections) {\n  if (allSelections.get(name).get(blockNumber) !== \"\") {\n    return allOptions.filter((v) =>\n      filterSelectedOnlyShowsSelected(v, blockNumber, name, allSelections)\n    );\n  } else {\n    return allOptions\n      .filter((v) => filterChosenByUser(v, blockNumber, name, allSelections))\n      .filter((v) => filterMax2NonEDInRow(v, blockNumber, name, allSelections))\n      .filter((v) => filterNoMICUBlock1(v, blockNumber))\n      .filter((v) => filterNoToxBlock7(v, blockNumber))\n      .filter((v) => filterNoPICUBlock9(v, blockNumber))\n      .filter((v) => oneMICUPerBlock(v, blockNumber, name, allSelections))\n      .filter((v) =>\n        twoOffRotationPerBlock(v, blockNumber, name, allSelections)\n      )\n      .filter((v) =>\n        filterMax3VacationsInBlock(v, blockNumber, name, allSelections)\n      );\n  }\n}\n\nfunction filterSelectedOnlyShowsSelected(\n  blockName,\n  blockNumber,\n  name,\n  allSelections\n) {\n  const selectedForThisBlock = allSelections.get(name).get(blockNumber);\n\n  if (selectedForThisBlock !== \"\" && blockName !== selectedForThisBlock) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\n// User must select one of each allShiftOptions by the end. Only show ones not\n// already chosen by this user.\nfunction filterChosenByUser(blockName, blockNumber, name, allSelections) {\n  const forName = allSelections.get(name);\n\n  const selectedByName = [...forName.values()];\n\n  if (selectedByName.includes(blockName)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\n// Cannot have 3 non-ED shifts in a row.\nfunction filterMax2NonEDInRow(blockName, blockNumber, name, allSelections) {\n  const forName = allSelections.get(name);\n\n  const arrCopy = [...forName.values()];\n  arrCopy[blockNumber] = blockName;\n\n  const threes = getThreeElementPossibilities(arrCopy, blockNumber);\n\n  const ruleBreakers = threes.filter((xs) =>\n    xs.every((shift) => isNotEdShift(shift) && shift !== \"\")\n  );\n\n  if (ruleBreakers.length >= 1) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction getThreeElementPossibilities(arr, index) {\n  const possibleSlices = [\n    [index - 2, index + 1],\n    [index - 1, index + 2],\n    [index, index + 3],\n  ];\n\n  const slices = [];\n\n  for (const [start, end] of possibleSlices) {\n    if (start >= 0 && end <= arr.length) {\n      slices.push(arr.slice(start, end));\n    }\n  }\n\n  return slices;\n}\n\nfunction filterNoMICUBlock1(blockName, blockNumber) {\n  if (blockName === \"MICU\" && blockNumber === 0) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction filterNoToxBlock7(blockName, blockNumber) {\n  if (blockName === \"TOX/Elec\" && blockNumber === 6) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction filterNoPICUBlock9(blockName, blockNumber) {\n  if (blockName === \"PICU\" && blockNumber === 8) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction oneMICUPerBlock(blockName, blockNumber, name, allSelections) {\n  const selectedThisBlock = getSelectedFromBlock(allSelections, blockNumber);\n\n  if (blockName === \"MICU\" && selectedThisBlock.includes(blockName)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction twoOffRotationPerBlock(blockName, blockNumber, name, allSelections) {\n  const selectedThisBlock = getSelectedFromBlock(allSelections, blockNumber);\n\n  if (\n    isOffRotation(blockName) &&\n    selectedThisBlock.filter((item) => item === blockName).length >= 2\n  ) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction filterMax3VacationsInBlock(\n  blockName,\n  blockNumber,\n  name,\n  allSelections\n) {\n  const selectedThisBlock = getSelectedFromBlock(allSelections, blockNumber);\n\n  const numVacationsThisBlock = selectedThisBlock.filter(isVacation).length;\n\n  if (isVacation(blockName) && numVacationsThisBlock >= 3) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction getSelectedFromBlock(allSelections, blockNumber) {\n  const selected = [];\n  for (let blockToShift of allSelections.values()) {\n    for (let [thisBlockNumber, shiftName] of blockToShift.entries()) {\n      if (thisBlockNumber === blockNumber) {\n        selected.push(shiftName);\n      }\n    }\n  }\n  return selected;\n}\n\n//////////////////////////////////////////////////////////////////////////////\n\nfunction onSelected(name, blockNumber, allSelections, setSelections, event) {\n  allSelections.get(name).set(blockNumber, event.target.value);\n  setSelections(new Map(allSelections));\n}\n\nfunction makeHeaders(numberOfBlocks) {\n  const nameHeader = <th>Name</th>;\n  const blockHeaders = allShiftOptions.map((option, index) => (\n    <th>{index + 1}</th>\n  ));\n  return (\n    <thead>\n      {nameHeader}\n      {blockHeaders}\n    </thead>\n  );\n}\n\nfunction initSelections(names) {\n  const nameMap = new Map();\n  names.forEach((name) => nameMap.set(name, initEmptySchedules()));\n  return nameMap;\n}\n\nfunction initEmptySchedules() {\n  const map = new Map();\n  allShiftOptions.forEach((option, index) => map.set(index, \"\"));\n  return map;\n}\n\nconst allShiftOptions = [\n  \"ED 1\",\n  \"ED 2\",\n  \"ED 3\",\n  \"ED 4\",\n  \"ED 5\",\n  \"ED 🏝 1\",\n  \"ED 🏝 2\",\n  \"ED Valley\",\n  \"Elective 🏝\",\n  \"CCU\",\n  \"PICU\",\n  \"MICU\",\n  \"TOX/Elec\",\n];\n\nfunction isNotEdShift(shiftName) {\n  return !shiftName.startsWith(\"ED\");\n}\n\nfunction isVacation(shiftName) {\n  return shiftName.startsWith(\"ED 🏝\") || shiftName.startsWith(\"Elective\");\n}\n\n// eslint-disable-next-line\nfunction isOffRotation(shiftName) {\n  return shiftName === \"ED Valley\" || !shiftName.startsWith(\"ED\");\n}\n\nconst doctors = [\n  \"Aaron\",\n  \"Nick\",\n  \"Amy\",\n  \"Charmayne\",\n  \"Connor\",\n  \"Junaid\",\n  \"Josh\",\n  \"Haseeb\",\n  \"Alissa\",\n  \"Danielle\",\n  \"Patrick\",\n  \"Nataliya\",\n];\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}